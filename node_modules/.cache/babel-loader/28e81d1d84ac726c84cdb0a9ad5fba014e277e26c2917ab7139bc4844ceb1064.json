{"ast":null,"code":"var _jsxFileName = \"/Users/piyushhh/Desktop/Fullstack/fokus/client/src/components/pomodoro/Pomodoro.jsx\",\n  _s = $RefreshSig$();\n// Pomodoro.jsx\nimport React, { useEffect, useReducer, useState } from \"react\";\nimport styles from \"./Pomodoro.module.scss\"; // Adjust the import based on your file structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  minutes: 1,\n  seconds: 0,\n  breakMinutes: 1,\n  breakSeconds: 0,\n  isWorking: true,\n  sessionName: \"Clear the dom and write a twitter post\"\n};\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"pomodoro/updated\":\n      return {\n        ...state,\n        seconds: state.seconds === 0 ? 59 : state.seconds - 1,\n        minutes: state.seconds === 0 ? state.minutes - 1 : state.minutes,\n        isWorking: state.minutes === 0 && state.seconds === 1 ? !state.isWorking : state.isWorking\n      };\n    case \"pomodoro/breakUpdated\":\n      return {\n        ...state,\n        breakSeconds: state.breakSeconds === 0 ? 59 : state.breakSeconds - 1,\n        breakMinutes: state.breakSeconds === 0 ? state.breakMinutes - 1 : state.breakMinutes\n      };\n    case \"pomodoro/added\":\n      return {\n        ...state,\n        sessionName: action.payload\n      };\n    default:\n      return state;\n  }\n}\nfunction Pomodoro() {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [timerCompleted, setTimerCompleted] = useState(false);\n  const [query, setQuery] = useState(\"\");\n\n  /*\n    Event handlers\n  */\n  function handleSubmit(e) {\n    e.preventDefault();\n    dispatch({\n      type: 'pomodoro/added',\n      payload: query\n    });\n    setQuery('');\n  }\n\n  /*\n    Effects\n  */\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (state.minutes === 0 && state.seconds === 0) {\n        setTimerCompleted(true);\n        return clearInterval(interval);\n      }\n      dispatch({\n        type: \"pomodoro/updated\"\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [state]);\n  useEffect(() => {\n    if (timerCompleted && !state.isWorking) {\n      const breakInterval = setInterval(() => {\n        if (state.breakMinutes === 0 && state.breakSeconds === 0) {\n          setTimerCompleted(false);\n          return clearInterval(breakInterval);\n        }\n        dispatch({\n          type: \"pomodoro/breakUpdated\"\n        });\n      }, 1000);\n      return () => clearInterval(breakInterval);\n    }\n  }, [timerCompleted, state]);\n\n  /*\n    Derived state\n  */\n  const totalSeconds = state.isWorking ? state.minutes * 60 + state.seconds : state.breakMinutes * 60 + state.breakSeconds;\n  const percentage = totalSeconds / (1 * 60) * 100; // Change 1 min with pomodoro length\n\n  /*\n    JSX\n  */\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.pomodoro__box,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.pomodoro__inner,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.pomodoro__progressbar,\n          style: {\n            width: `${percentage}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), state.isWorking ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.pomodoro__timer,\n          children: [String(state.minutes).padStart(2, \"0\"), \" :\", \" \", String(state.seconds).padStart(2, \"0\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.pomodoro__timer,\n          children: [String(state.breakMinutes).padStart(2, \"0\"), \" :\", \" \", String(state.breakSeconds).padStart(2, \"0\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.pomodoro__sessionType,\n          children: state.isWorking ? `${state.sessionName}` : state.breakSeconds !== 0 || state.breakMinutes !== 0 ? \"Break\" : `Great '${state.sessionName}' session complete, start a new one`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.pomodoro__add,\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: styles.pomodoro__input,\n            value: query,\n            onChange: e => setQuery(e.target.value),\n            placeholder: \"Give session name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.pomodoro__add__button,\n          children: \"Add tas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Pomodoro, \"kxs+PlMxUOyMCCDJKIH86jr5R20=\");\n_c = Pomodoro;\nexport default Pomodoro;\nvar _c;\n$RefreshReg$(_c, \"Pomodoro\");","map":{"version":3,"names":["React","useEffect","useReducer","useState","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","initialState","minutes","seconds","breakMinutes","breakSeconds","isWorking","sessionName","reducer","state","action","type","payload","Pomodoro","_s","dispatch","timerCompleted","setTimerCompleted","query","setQuery","handleSubmit","e","preventDefault","interval","setInterval","clearInterval","breakInterval","totalSeconds","percentage","children","className","pomodoro__box","pomodoro__inner","pomodoro__progressbar","style","width","fileName","_jsxFileName","lineNumber","columnNumber","pomodoro__timer","String","padStart","pomodoro__sessionType","pomodoro__add","onSubmit","pomodoro__input","value","onChange","target","placeholder","pomodoro__add__button","_c","$RefreshReg$"],"sources":["/Users/piyushhh/Desktop/Fullstack/fokus/client/src/components/pomodoro/Pomodoro.jsx"],"sourcesContent":["// Pomodoro.jsx\nimport React, { useEffect, useReducer, useState } from \"react\";\nimport styles from \"./Pomodoro.module.scss\"; // Adjust the import based on your file structure\n\nconst initialState = {\n  minutes: 1,\n  seconds: 0,\n  breakMinutes: 1,\n  breakSeconds: 0,\n  isWorking: true,\n  sessionName: \"Clear the dom and write a twitter post\",\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"pomodoro/updated\":\n      return {\n        ...state,\n        seconds: state.seconds === 0 ? 59 : state.seconds - 1,\n        minutes: state.seconds === 0 ? state.minutes - 1 : state.minutes,\n        isWorking:\n          state.minutes === 0 && state.seconds === 1\n            ? !state.isWorking\n            : state.isWorking,\n      };\n\n    case \"pomodoro/breakUpdated\":\n      return {\n        ...state,\n        breakSeconds: state.breakSeconds === 0 ? 59 : state.breakSeconds - 1,\n        breakMinutes:\n          state.breakSeconds === 0\n            ? state.breakMinutes - 1\n            : state.breakMinutes,\n      };\n\n    case \"pomodoro/added\":\n      return {\n        ...state,\n        sessionName: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction Pomodoro() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [timerCompleted, setTimerCompleted] = useState(false);\n  const [query, setQuery] = useState(\"\")\n\n  /*\n    Event handlers\n  */\n  function handleSubmit(e) {\n    e.preventDefault();\n    dispatch({type: 'pomodoro/added', payload: query});\n    setQuery('')\n  }\n\n  /*\n    Effects\n  */\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (state.minutes === 0 && state.seconds === 0) {\n        setTimerCompleted(true);\n        return clearInterval(interval);\n      }\n      dispatch({ type: \"pomodoro/updated\" });\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [state]);\n\n  useEffect(() => {\n    if (timerCompleted && !state.isWorking) {\n      const breakInterval = setInterval(() => {\n        if (state.breakMinutes === 0 && state.breakSeconds === 0) {\n          setTimerCompleted(false);\n          return clearInterval(breakInterval);\n        }\n        dispatch({ type: \"pomodoro/breakUpdated\" });\n      }, 1000);\n\n      return () => clearInterval(breakInterval);\n    }\n  }, [timerCompleted, state]);\n\n  /*\n    Derived state\n  */\n  const totalSeconds = state.isWorking\n    ? state.minutes * 60 + state.seconds\n    : state.breakMinutes * 60 + state.breakSeconds;\n  const percentage = (totalSeconds / (1 * 60)) * 100; // Change 1 min with pomodoro length\n\n  /*\n    JSX\n  */\n  return (\n    <>\n      <div className={styles.pomodoro__box}>\n        <div className={styles.pomodoro__inner}>\n          <div\n            className={styles.pomodoro__progressbar}\n            style={{ width: `${percentage}%` }}\n          />\n\n          {state.isWorking ? (\n            <div className={styles.pomodoro__timer}>\n              {String(state.minutes).padStart(2, \"0\")} :{\" \"}\n              {String(state.seconds).padStart(2, \"0\")}\n            </div>\n          ) : (\n            <div className={styles.pomodoro__timer}>\n              {String(state.breakMinutes).padStart(2, \"0\")} :{\" \"}\n              {String(state.breakSeconds).padStart(2, \"0\")}\n            </div>\n          )}\n          <div className={styles.pomodoro__sessionType}>\n            {state.isWorking\n              ? `${state.sessionName}`\n              : state.breakSeconds !== 0 || state.breakMinutes !== 0\n              ? \"Break\"\n              : `Great '${state.sessionName}' session complete, start a new one`}\n          </div>\n        </div>\n\n        <div className={styles.pomodoro__add}>\n          <form onSubmit={handleSubmit}>\n            <input\n              type=\"text\"\n              className={styles.pomodoro__input}\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n              placeholder=\"Give session name\"\n            />\n          </form>\n\n          <span className={styles.pomodoro__add__button}>Add tas</span>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Pomodoro;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,OAAOC,MAAM,MAAM,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,CAAC;EACVC,OAAO,EAAE,CAAC;EACVC,YAAY,EAAE,CAAC;EACfC,YAAY,EAAE,CAAC;EACfC,SAAS,EAAE,IAAI;EACfC,WAAW,EAAE;AACf,CAAC;AAED,SAASC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;EAC9B,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,kBAAkB;MACrB,OAAO;QACL,GAAGF,KAAK;QACRN,OAAO,EAAEM,KAAK,CAACN,OAAO,KAAK,CAAC,GAAG,EAAE,GAAGM,KAAK,CAACN,OAAO,GAAG,CAAC;QACrDD,OAAO,EAAEO,KAAK,CAACN,OAAO,KAAK,CAAC,GAAGM,KAAK,CAACP,OAAO,GAAG,CAAC,GAAGO,KAAK,CAACP,OAAO;QAChEI,SAAS,EACPG,KAAK,CAACP,OAAO,KAAK,CAAC,IAAIO,KAAK,CAACN,OAAO,KAAK,CAAC,GACtC,CAACM,KAAK,CAACH,SAAS,GAChBG,KAAK,CAACH;MACd,CAAC;IAEH,KAAK,uBAAuB;MAC1B,OAAO;QACL,GAAGG,KAAK;QACRJ,YAAY,EAAEI,KAAK,CAACJ,YAAY,KAAK,CAAC,GAAG,EAAE,GAAGI,KAAK,CAACJ,YAAY,GAAG,CAAC;QACpED,YAAY,EACVK,KAAK,CAACJ,YAAY,KAAK,CAAC,GACpBI,KAAK,CAACL,YAAY,GAAG,CAAC,GACtBK,KAAK,CAACL;MACd,CAAC;IAEH,KAAK,gBAAgB;MACnB,OAAO;QACL,GAAGK,KAAK;QACRF,WAAW,EAAEG,MAAM,CAACE;MACtB,CAAC;IAEH;MACE,OAAOH,KAAK;EAChB;AACF;AAEA,SAASI,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACL,KAAK,EAAEM,QAAQ,CAAC,GAAGrB,UAAU,CAACc,OAAO,EAAEP,YAAY,CAAC;EAC3D,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;;EAEtC;AACF;AACA;EACE,SAASyB,YAAYA,CAACC,CAAC,EAAE;IACvBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBP,QAAQ,CAAC;MAACJ,IAAI,EAAE,gBAAgB;MAAEC,OAAO,EAAEM;IAAK,CAAC,CAAC;IAClDC,QAAQ,CAAC,EAAE,CAAC;EACd;;EAEA;AACF;AACA;EACE1B,SAAS,CAAC,MAAM;IACd,MAAM8B,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,IAAIf,KAAK,CAACP,OAAO,KAAK,CAAC,IAAIO,KAAK,CAACN,OAAO,KAAK,CAAC,EAAE;QAC9Cc,iBAAiB,CAAC,IAAI,CAAC;QACvB,OAAOQ,aAAa,CAACF,QAAQ,CAAC;MAChC;MACAR,QAAQ,CAAC;QAAEJ,IAAI,EAAE;MAAmB,CAAC,CAAC;IACxC,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMc,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACd,KAAK,CAAC,CAAC;EAEXhB,SAAS,CAAC,MAAM;IACd,IAAIuB,cAAc,IAAI,CAACP,KAAK,CAACH,SAAS,EAAE;MACtC,MAAMoB,aAAa,GAAGF,WAAW,CAAC,MAAM;QACtC,IAAIf,KAAK,CAACL,YAAY,KAAK,CAAC,IAAIK,KAAK,CAACJ,YAAY,KAAK,CAAC,EAAE;UACxDY,iBAAiB,CAAC,KAAK,CAAC;UACxB,OAAOQ,aAAa,CAACC,aAAa,CAAC;QACrC;QACAX,QAAQ,CAAC;UAAEJ,IAAI,EAAE;QAAwB,CAAC,CAAC;MAC7C,CAAC,EAAE,IAAI,CAAC;MAER,OAAO,MAAMc,aAAa,CAACC,aAAa,CAAC;IAC3C;EACF,CAAC,EAAE,CAACV,cAAc,EAAEP,KAAK,CAAC,CAAC;;EAE3B;AACF;AACA;EACE,MAAMkB,YAAY,GAAGlB,KAAK,CAACH,SAAS,GAChCG,KAAK,CAACP,OAAO,GAAG,EAAE,GAAGO,KAAK,CAACN,OAAO,GAClCM,KAAK,CAACL,YAAY,GAAG,EAAE,GAAGK,KAAK,CAACJ,YAAY;EAChD,MAAMuB,UAAU,GAAID,YAAY,IAAI,CAAC,GAAG,EAAE,CAAC,GAAI,GAAG,CAAC,CAAC;;EAEpD;AACF;AACA;EACE,oBACE7B,OAAA,CAAAE,SAAA;IAAA6B,QAAA,eACE/B,OAAA;MAAKgC,SAAS,EAAElC,MAAM,CAACmC,aAAc;MAAAF,QAAA,gBACnC/B,OAAA;QAAKgC,SAAS,EAAElC,MAAM,CAACoC,eAAgB;QAAAH,QAAA,gBACrC/B,OAAA;UACEgC,SAAS,EAAElC,MAAM,CAACqC,qBAAsB;UACxCC,KAAK,EAAE;YAAEC,KAAK,EAAG,GAAEP,UAAW;UAAG;QAAE;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC,EAED9B,KAAK,CAACH,SAAS,gBACdR,OAAA;UAAKgC,SAAS,EAAElC,MAAM,CAAC4C,eAAgB;UAAAX,QAAA,GACpCY,MAAM,CAAChC,KAAK,CAACP,OAAO,CAAC,CAACwC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAC,IAAE,EAAC,GAAG,EAC7CD,MAAM,CAAChC,KAAK,CAACN,OAAO,CAAC,CAACuC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC,gBAENzC,OAAA;UAAKgC,SAAS,EAAElC,MAAM,CAAC4C,eAAgB;UAAAX,QAAA,GACpCY,MAAM,CAAChC,KAAK,CAACL,YAAY,CAAC,CAACsC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAC,IAAE,EAAC,GAAG,EAClDD,MAAM,CAAChC,KAAK,CAACJ,YAAY,CAAC,CAACqC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CACN,eACDzC,OAAA;UAAKgC,SAAS,EAAElC,MAAM,CAAC+C,qBAAsB;UAAAd,QAAA,EAC1CpB,KAAK,CAACH,SAAS,GACX,GAAEG,KAAK,CAACF,WAAY,EAAC,GACtBE,KAAK,CAACJ,YAAY,KAAK,CAAC,IAAII,KAAK,CAACL,YAAY,KAAK,CAAC,GACpD,OAAO,GACN,UAASK,KAAK,CAACF,WAAY;QAAoC;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENzC,OAAA;QAAKgC,SAAS,EAAElC,MAAM,CAACgD,aAAc;QAAAf,QAAA,gBACnC/B,OAAA;UAAM+C,QAAQ,EAAEzB,YAAa;UAAAS,QAAA,eAC3B/B,OAAA;YACEa,IAAI,EAAC,MAAM;YACXmB,SAAS,EAAElC,MAAM,CAACkD,eAAgB;YAClCC,KAAK,EAAE7B,KAAM;YACb8B,QAAQ,EAAG3B,CAAC,IAAKF,QAAQ,CAACE,CAAC,CAAC4B,MAAM,CAACF,KAAK,CAAE;YAC1CG,WAAW,EAAC;UAAmB;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAEPzC,OAAA;UAAMgC,SAAS,EAAElC,MAAM,CAACuD,qBAAsB;UAAAtB,QAAA,EAAC;QAAO;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP;AAACzB,EAAA,CAnGQD,QAAQ;AAAAuC,EAAA,GAARvC,QAAQ;AAqGjB,eAAeA,QAAQ;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}