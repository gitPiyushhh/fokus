{"ast":null,"code":"var _jsxFileName = \"/Users/piyushhh/Desktop/Fullstack/fokus/client/src/components/pomodoro/Pomodoro.jsx\",\n  _s = $RefreshSig$();\n// Pomodoro.jsx\nimport React, { useEffect, useReducer } from \"react\";\nimport styles from \"./Pomodoro.module.scss\"; // Adjust the import based on your file structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  minutes: 25,\n  seconds: 0,\n  isWorking: true,\n  sessionName: \"\"\n};\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"pomodoro/updated\":\n      return {\n        ...state,\n        seconds: state.seconds === 0 ? 59 : state.seconds - 1,\n        minutes: state.seconds === 0 ? state.minutes - 1 : state.minutes,\n        isWorking: state.minutes === 0 && state.seconds === 0 ? !state.isWorking : state.isWorking\n      };\n    case \"pomodoro/added\":\n      return {\n        ...state,\n        sessionName: action.payload\n      };\n    default:\n      return state;\n  }\n}\nfunction Pomodoro() {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      dispatch({\n        type: \"pomodoro/updated\"\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  const totalSeconds = state.minutes * 60 + state.seconds;\n  const percentage = totalSeconds / (25 * 60) * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.pomodoro,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.pomodoro__inner,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.pomodoro__progressbar,\n        style: {\n          width: `${percentage}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.pomodoro__timer,\n        children: [String(state.minutes).padStart(2, \"0\"), \" :\", \" \", String(state.seconds).padStart(2, \"0\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.pomodoro__sessionType,\n        children: state.isWorking ? `${statesessionName}` : \"Break\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(Pomodoro, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = Pomodoro;\nexport default Pomodoro;\nvar _c;\n$RefreshReg$(_c, \"Pomodoro\");","map":{"version":3,"names":["React","useEffect","useReducer","styles","jsxDEV","_jsxDEV","initialState","minutes","seconds","isWorking","sessionName","reducer","state","action","type","payload","Pomodoro","_s","dispatch","interval","setInterval","clearInterval","totalSeconds","percentage","className","pomodoro","children","pomodoro__inner","pomodoro__progressbar","style","width","fileName","_jsxFileName","lineNumber","columnNumber","pomodoro__timer","String","padStart","pomodoro__sessionType","statesessionName","_c","$RefreshReg$"],"sources":["/Users/piyushhh/Desktop/Fullstack/fokus/client/src/components/pomodoro/Pomodoro.jsx"],"sourcesContent":["// Pomodoro.jsx\nimport React, { useEffect, useReducer } from \"react\";\nimport styles from \"./Pomodoro.module.scss\"; // Adjust the import based on your file structure\n\nconst initialState = {\n  minutes: 25,\n  seconds: 0,\n  isWorking: true,\n  sessionName: \"\"\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"pomodoro/updated\":\n      return {\n        ...state,\n        seconds: state.seconds === 0 ? 59 : state.seconds - 1,\n        minutes: state.seconds === 0 ? state.minutes - 1 : state.minutes,\n        isWorking:\n          state.minutes === 0 && state.seconds === 0\n            ? !state.isWorking\n            : state.isWorking,\n      };\n    case \"pomodoro/added\":\n      return {\n        ...state,\n        sessionName: action.payload\n      }\n    default:\n      return state;\n  }\n}\n\nfunction Pomodoro() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      dispatch({ type: \"pomodoro/updated\" });\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const totalSeconds = state.minutes * 60 + state.seconds;\n  const percentage = (totalSeconds / (25 * 60)) * 100;\n\n  return (\n    <div className={styles.pomodoro}>\n      <div className={styles.pomodoro__inner}>\n        <div\n          className={styles.pomodoro__progressbar}\n          style={{ width: `${percentage}%` }}\n        />\n        <div className={styles.pomodoro__timer}>\n          {String(state.minutes).padStart(2, \"0\")} :{\" \"}\n          {String(state.seconds).padStart(2, \"0\")}\n        </div>\n        <div className={styles.pomodoro__sessionType}>\n          {state.isWorking ? `${statesessionName}` : \"Break\"}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}