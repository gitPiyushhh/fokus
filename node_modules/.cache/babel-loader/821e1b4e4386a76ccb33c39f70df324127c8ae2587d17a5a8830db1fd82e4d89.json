{"ast":null,"code":"var _jsxFileName = \"/Users/piyushhh/Desktop/Fullstack/fokus/client/src/components/pomodoro/Pomodoro.jsx\",\n  _s = $RefreshSig$();\n// Pomodoro.jsx\nimport React, { useEffect, useReducer, useState } from \"react\";\nimport styles from \"./Pomodoro.module.scss\"; // Adjust the import based on your file structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  minutes: 1,\n  seconds: 0,\n  breakMinutes: 1,\n  breakSeconds: 0,\n  isWorking: false,\n  isBreaking: false,\n  sessionName: \"Clear the dom and write a twitter post\"\n};\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"pomodoro/added\":\n      return {\n        ...state,\n        isWorking: true,\n        sessionName: action.payload\n      };\n    case \"pomodoro/updated\":\n      return {\n        ...state,\n        seconds: state.seconds === 0 ? 59 : state.seconds - 1,\n        minutes: state.seconds === 0 ? state.minutes - 1 : state.minutes,\n        isWorking: state.minutes === 0 && state.seconds === 1 ? !state.isWorking : state.isWorking,\n        isBreaking: state.minutes === 0 && state.seconds === 1 ? true : false\n      };\n    case \"pomodoro/breakStart\":\n      return {\n        ...state,\n        isBreaking: true\n      };\n    case \"pomodoro/breakUpdated\":\n      return {\n        ...state,\n        breakSeconds: state.breakSeconds === 0 ? 59 : state.breakSeconds - 1,\n        breakMinutes: state.breakSeconds === 0 ? state.breakMinutes - 1 : state.breakMinutes\n      };\n    case \"pomodoro/breakEnded\":\n      return initialState;\n    default:\n      return state;\n  }\n}\nfunction Pomodoro() {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [timerCompleted, setTimerCompleted] = useState(false);\n  const [query, setQuery] = useState(\"\");\n\n  /*\n    Event handlers\n  */\n  function handleSubmit(e) {\n    if (!query) {\n      alert('Please enter session name');\n    }\n    e.preventDefault();\n    dispatch({\n      type: \"pomodoro/added\",\n      payload: query\n    });\n    setQuery(\"\");\n  }\n\n  /*\n    Effects\n  */\n  useEffect(() => {\n    // Check if isWorking is true before starting the timer\n    if (state.isWorking) {\n      const interval = setInterval(() => {\n        if (state.seconds === 1) {\n          setTimerCompleted(() => true);\n        }\n        if (state.minutes === 0 && state.seconds === 0) {\n          return clearInterval(interval);\n        } else {\n          dispatch({\n            type: \"pomodoro/updated\"\n          });\n        }\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [state]);\n  useEffect(() => {\n    if (timerCompleted && state.isBreaking) {\n      const breakInterval = setInterval(() => {\n        if (state.breakMinutes === 0 && state.breakSeconds === 0) {\n          setTimerCompleted(false);\n          dispatch({\n            type: \"pomodoro/breakEnded\"\n          });\n          return clearInterval(breakInterval);\n        }\n        dispatch({\n          type: \"pomodoro/breakUpdated\"\n        });\n      }, 1000);\n      return () => clearInterval(breakInterval);\n    }\n  }, [timerCompleted, state]);\n\n  /*\n    Derived state\n  */\n  const totalSeconds = state.isWorking ? state.minutes * 60 + state.seconds : state.breakMinutes * 60 + state.breakSeconds;\n  const percentage = totalSeconds / (1 * 60) * 100; // Change 1 min with pomodoro length\n\n  /*\n    JSX\n  */\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.pomodoro__box,\n      children: state.isWorking || state.isBreaking ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.pomodoro__inner,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.pomodoro__progressbar,\n          style: {\n            width: `${percentage}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), state.isWorking ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.pomodoro__timer,\n          children: [String(state.minutes).padStart(2, \"0\"), \" :\", \" \", String(state.seconds).padStart(2, \"0\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.pomodoro__timer,\n          children: [String(state.breakMinutes).padStart(2, \"0\"), \" :\", \" \", String(state.breakSeconds).padStart(2, \"0\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.pomodoro__sessionType,\n          children: state.isWorking ? `${state.sessionName}` : state.breakSeconds !== 0 || state.breakMinutes !== 0 ? \"Break\" : `Great '${state.sessionName}' session complete, start a new one`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.pomodoro__add,\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: styles.pomodoro__form,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: styles.pomodoro__input,\n            value: query,\n            onChange: e => setQuery(e.target.value),\n            placeholder: \"Give session name and  \\u23CE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.pomodoro__add__button,\n          onClick: handleSubmit,\n          children: \"Go-fous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Pomodoro, \"kxs+PlMxUOyMCCDJKIH86jr5R20=\");\n_c = Pomodoro;\nexport default Pomodoro;\nvar _c;\n$RefreshReg$(_c, \"Pomodoro\");","map":{"version":3,"names":["React","useEffect","useReducer","useState","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","initialState","minutes","seconds","breakMinutes","breakSeconds","isWorking","isBreaking","sessionName","reducer","state","action","type","payload","Pomodoro","_s","dispatch","timerCompleted","setTimerCompleted","query","setQuery","handleSubmit","e","alert","preventDefault","interval","setInterval","clearInterval","breakInterval","totalSeconds","percentage","children","className","pomodoro__box","pomodoro__inner","pomodoro__progressbar","style","width","fileName","_jsxFileName","lineNumber","columnNumber","pomodoro__timer","String","padStart","pomodoro__sessionType","pomodoro__add","onSubmit","pomodoro__form","pomodoro__input","value","onChange","target","placeholder","pomodoro__add__button","onClick","_c","$RefreshReg$"],"sources":["/Users/piyushhh/Desktop/Fullstack/fokus/client/src/components/pomodoro/Pomodoro.jsx"],"sourcesContent":["// Pomodoro.jsx\nimport React, { useEffect, useReducer, useState } from \"react\";\nimport styles from \"./Pomodoro.module.scss\"; // Adjust the import based on your file structure\n\nconst initialState = {\n  minutes: 1,\n  seconds: 0,\n  breakMinutes: 1,\n  breakSeconds: 0,\n  isWorking: false,\n  isBreaking: false,\n  sessionName: \"Clear the dom and write a twitter post\",\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"pomodoro/added\":\n      return {\n        ...state,\n        isWorking: true,\n        sessionName: action.payload,\n      };\n\n    case \"pomodoro/updated\":\n      return {\n        ...state,\n        seconds: state.seconds === 0 ? 59 : state.seconds - 1,\n        minutes: state.seconds === 0 ? state.minutes - 1 : state.minutes,\n        isWorking:\n          state.minutes === 0 && state.seconds === 1\n            ? !state.isWorking\n            : state.isWorking,\n        isBreaking: state.minutes === 0 && state.seconds === 1 ? true : false,\n      };\n\n    case \"pomodoro/breakStart\":\n      return {\n        ...state,\n        isBreaking: true,\n      };\n\n    case \"pomodoro/breakUpdated\":\n      return {\n        ...state,\n        breakSeconds: state.breakSeconds === 0 ? 59 : state.breakSeconds - 1,\n        breakMinutes:\n          state.breakSeconds === 0\n            ? state.breakMinutes - 1\n            : state.breakMinutes,\n      };\n\n    case \"pomodoro/breakEnded\":\n      return initialState;\n\n    default:\n      return state;\n  }\n}\n\nfunction Pomodoro() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [timerCompleted, setTimerCompleted] = useState(false);\n  const [query, setQuery] = useState(\"\");\n\n  /*\n    Event handlers\n  */\n  function handleSubmit(e) {\n    if(!query) {\n      alert('Please enter session name');\n      \n    }\n\n    e.preventDefault();\n    dispatch({ type: \"pomodoro/added\", payload: query });\n    setQuery(\"\");\n  }\n\n  /*\n    Effects\n  */\n  useEffect(() => {\n    // Check if isWorking is true before starting the timer\n    if (state.isWorking) {\n      const interval = setInterval(() => {\n        if(state.seconds === 1) {\n          setTimerCompleted(() => true);\n        }\n\n        if (state.minutes === 0 && state.seconds === 0) {\n          return clearInterval(interval);\n        } else {\n          dispatch({ type: \"pomodoro/updated\" });\n        }\n      }, 1000);\n\n      return () => clearInterval(interval);\n    }\n  }, [state]);\n\n  useEffect(() => {\n    if (timerCompleted && state.isBreaking) {\n      const breakInterval = setInterval(() => {\n        if (state.breakMinutes === 0 && state.breakSeconds === 0) {\n          setTimerCompleted(false);\n          dispatch({ type: \"pomodoro/breakEnded\" });\n          return clearInterval(breakInterval);\n        }\n        dispatch({ type: \"pomodoro/breakUpdated\" });\n      }, 1000);\n\n      return () => clearInterval(breakInterval);\n    }\n  }, [timerCompleted, state]);\n\n  /*\n    Derived state\n  */\n  const totalSeconds = state.isWorking\n    ? state.minutes * 60 + state.seconds\n    : state.breakMinutes * 60 + state.breakSeconds;\n  const percentage = (totalSeconds / (1 * 60)) * 100; // Change 1 min with pomodoro length\n\n  /*\n    JSX\n  */\n  return (\n    <>\n      <div className={styles.pomodoro__box}>\n        {state.isWorking || state.isBreaking ? (\n          <div className={styles.pomodoro__inner}>\n            <div\n              className={styles.pomodoro__progressbar}\n              style={{ width: `${percentage}%` }}\n            />\n\n            {state.isWorking ? (\n              <div className={styles.pomodoro__timer}>\n                {String(state.minutes).padStart(2, \"0\")} :{\" \"}\n                {String(state.seconds).padStart(2, \"0\")}\n              </div>\n            ) : (\n              <div className={styles.pomodoro__timer}>\n                {String(state.breakMinutes).padStart(2, \"0\")} :{\" \"}\n                {String(state.breakSeconds).padStart(2, \"0\")}\n              </div>\n            )}\n            <div className={styles.pomodoro__sessionType}>\n              {state.isWorking\n                ? `${state.sessionName}`\n                : state.breakSeconds !== 0 || state.breakMinutes !== 0\n                ? \"Break\"\n                : `Great '${state.sessionName}' session complete, start a new one`}\n            </div>\n          </div>\n        ) : (\n          <div className={styles.pomodoro__add}>\n            <form onSubmit={handleSubmit} className={styles.pomodoro__form}>\n              <input\n                type=\"text\"\n                className={styles.pomodoro__input}\n                value={query}\n                onChange={(e) => setQuery(e.target.value)}\n                placeholder=\"Give session name and  &#9166;\"\n              />\n            </form>\n\n            <span className={styles.pomodoro__add__button} onClick={handleSubmit}>Go-fous</span>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default Pomodoro;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}